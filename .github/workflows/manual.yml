# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      Scheme:
        type: choice
        # Default value if no value is selected
        default: 'AssetStorage'
        # Input has to be provided for the workflow to run
        required: true
        options:
        - AssetStorage
        - AssetStorageBeta
        - AssetStorageRelease
      Note:
        description: 'Add release notes for this build'
        default: 'This build is ready for testing'
        required: true
env:
  dev_build: ${{ vars.DEV_BUILD_NUMBER }}
                

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: 
  build:
    name: Build [${{ github.event.inputs.Scheme }}]
    env: # overrides: https://github.com/mbitsnbites/buildcache/blob/master/doc/configuration.md
      BUILDCACHE_DIR: ../.buildcache # optional: Put the cache somewhere else
      BUILDCACHE_DEBUG: 2 # optional: If you need more logging?
      BUILDCACHE_MAX_CACHE_SIZE: 1000000000 # optional: Need a bigger cache?
      BUILDCACHE_LOG_FILE: ../buildcache.log
    runs-on: macos-latest

    steps:  
      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        channel-id: 'C040Y3ACZM1'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "`${{ github.actor }}` Started distributing build `${{ github.event.inputs.Scheme }} v${{ github.event.inputs.Version }} (${{ github.event.inputs.BuildNumber }})` âŒ›\n\nRelease Note: `${{ github.event.inputs.ReleaseNote }}`\n\nDistributing To `${{ github.event.inputs.Platform }}` Platform(s)\n\n\nBranch: `${{ github.ref }}`\n\n\nLast Commit: `${{ github.sha }}` Run: ",
              "attachments": [
                {
                  "pretext": "",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress.."
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: 'xoxb-4017647486839-4017649562263-AYWIgEnJuRs02BL4QMl7BliI'
          
      - name: Fail check
        if: ${{ cancelled() }}
        run: |
          echo: "Cancelled by user"
          
      - name: Restore buildcache
        uses: mikehardy/buildcache-action@v1
        continue-on-error: true
        with:
          cache_key: ${{ matrix.os }} # optional: separate caches maybe?
          upload_buildcache_log: 'true' # optional: 100% cache misses? Find out why
          zero_buildcache_stats: 'false' # optional: lifetime vs per-run stats?

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
          
      - name: Build
        run: |
          "xcodebuild \
          CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ \
          -derivedDataPath ios/build -UseModernBuildSystem=YES \
          -workspace AssetStorage.xcworkspace \
          -scheme AssetStorage \
          -sdk iphonesimulator \
          -configuration Debug \
          -destination \"generic/platform=iOS Simulator\" \
          build \
          CODE_SIGNING_ALLOWED=NO"

      - name: Send Failure GitHub Action trigger data to Slack workflow
        id: slack
        channel-id: 'C040Y3ACZM1'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Failed to build",
              "attachments": [
                {
                  "pretext": "",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": false,
                      "value": "Failed"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: 'xoxb-4017647486839-4017649562263-AYWIgEnJuRs02BL4QMl7BliI'
          
